# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'

pool:
  vmImage: 'ubuntu-18.04'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    feedsToUse: 'select'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'Sonarcloud Arduosoft RawCms'
    organization: 'arduosoft-1'
    scannerMode: 'MSBuild'
    projectKey: 'arduosoft_RawCMS'
    projectName: 'RawCms'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    projects: 'RawCMS\RawCMS.csproj'
    arguments: ' --output $(Build.ArtifactStagingDirectory)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    arguments: 'RawCMS.Client\RawCMS.Client.csproj --output $(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: Docker@2
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    containerRegistry: 'Docker Registry Arduosoft'
    repository: 'arduosoft/rawcms-alpha'
    command: 'buildAndPush'
    Dockerfile: 'docker/Dockerfile'
    buildContext: '.'
    tags: |
      $(Build.BuildId)
      latest

- task: CopyFiles@2
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    SourceFolder: 'docker'
    Contents: 'Dockerfile'
    TargetFolder: '$(Build.Repository.LocalPath)'

- task: Bash@3
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    targetType: 'inline'
    script: |
      #install heroku
      sudo apt update
      sudo apt install snapd -y
      echo "HEROKU INSTALL"
      sudo snap install --classic heroku
      sudo apt-get install nodejs
      export PATH="$PATH:/snap/bin"
      heroku
      echo "Set token"
      export HEROKU_API_KEY="$(HEROKU_TOKEN)"
      heroku container:login
      
      echo "login"
      heroku container:push web -a rawcms-preview
      heroku container:release web -a rawcms-preview
